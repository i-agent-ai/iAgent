{
  "name": "iAgent Development Environment",
  "image": "mcr.microsoft.com/devcontainers/typescript-node:20-bullseye",
  
  // Features to install in the container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },

  // VS Code extensions to install
  "customizations": {
    "vscode": {
      "extensions": [
        "nrwl.angular-console",
        "ms-vscode.vscode-typescript-next",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-json",
        "ms-vscode.vscode-node-azure-pack",
        "ms-vscode.vscode-node-debug2",
        "ms-vscode.vscode-eslint",
        "ms-vscode.vscode-jest",
        "formulahendry.auto-rename-tag",
        "christian-kohler.path-intellisense",
        "redhat.vscode-yaml",
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "mongodb.mongodb-vscode",
        "ms-vscode.test-adapter-converter",
        "hbenl.vscode-test-explorer"
      ],
      
      "settings": {
        "typescript.preferences.importModuleSpecifier": "relative",
        "typescript.suggest.autoImports": true,
        "typescript.updateImportsOnFileMove.enabled": "always",
        "eslint.workingDirectories": [
          "apps/frontend",
          "apps/backend",
          "libs/shared-types",
          "libs/shared-utils",
          "libs/stream-mocks",
          "libs/types"
        ],
        "eslint.validate": [
          "javascript",
          "javascriptreact",
          "typescript",
          "typescriptreact"
        ],
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "prettier.requireConfig": true,
        "tailwindCSS.includeLanguages": {
          "typescript": "typescript",
          "typescriptreact": "typescriptreact"
        },
        "tailwindCSS.experimental.classRegex": [
          ["clsx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
          ["classnames\\(([^)]*)\\)", "'([^']*)'"],
          ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"]
        ],
        "files.associations": {
          "*.css": "tailwindcss"
        },
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash",
            "args": ["-l"]
          }
        },
        "nx.enableLibraryImports": true,
        "nx.showProjectGraph": true,
        "jest.jestCommandLine": "npx nx test",
        "jest.autoRun": "off"
      }
    }
  },

  // Ports to forward
  "forwardPorts": [3000, 3001, 4200, 4873],
  "portsAttributes": {
    "3000": {
      "label": "Frontend (React)",
      "onAutoForward": "notify"
    },
    "3001": {
      "label": "Backend (NestJS)",
      "onAutoForward": "notify"
    },
    "4200": {
      "label": "Frontend Alternative",
      "onAutoForward": "silent"
    },
    "4873": {
      "label": "Local Registry",
      "onAutoForward": "silent"
    }
  },

  // Commands to run after container creation
  "postCreateCommand": "npm install && npx nx run-many --target=build --all",
  
  // Commands to run after container starts
  "postStartCommand": "echo 'iAgent development environment is ready! Run npm run dev to start development servers.'",
  
  // Environment variables
  "containerEnv": {
    "NODE_ENV": "development",
    "NX_CLOUD_DISTRIBUTED_EXECUTION": "false"
  },

  // User configuration
  "remoteUser": "node",
  
  // Additional configuration
  "updateContentCommand": "npm install",
  "updateRemoteUserUID": "automatic"
}